#!/bin/sh
set -e

# Settings for copying kernel images from your device's disk to the ramdisk's
# PXE boot folder. Customize this for your specific partitions.

uci import pxe_menu < /dev/null
uci add pxe_menu pxe_menu

# Specify the boot partition. It's recommended to instead use blkid IDs
# instead of e.g. "/dev/sda" to avoid inconsistent block device numbering.
uci set pxe_menu.@pxe_menu[0].boot_partition="$(blkid --uuid 'b7b071ef-8c7f-480c-b8d5-a02fdae46f90')"

# boot_path is the location of the kernels relative to boot_partition.
# E.g. "/", or "/boot" if included in the main root partition
uci set pxe_menu.@pxe_menu[0].boot_path="/"

# If we can't determine the kernel command line, use this
uci set pxe_menu.@pxe_menu[0].cmdline_default="\
ro \
rhgb \
root=/dev/disk/by-uuid/5b6621d0-15ae-4c93-b9d6-f2a197a9ef06 \
"

## Use iSCSI Boot Firmware Table (iBFT) to pass the iSCSI connection
## details to dracut initrd through an iBFT ACPI table.

uci set pxe_menu.@pxe_menu[0].ibft="1"

# Specify the dracut-network iSCSI parameters
uci set pxe_menu.@pxe_menu[0].cmdline_iscsi="\
rd.shell \
rd.retry=5 \
netroot=iscsi \
rd.iscsi.firmware=1 \
ifname=bootnet:\${netX/mac} \
ip=bootnet:dhcp \
systemd.mask=sleep.target \
systemd.mask=suspend.target \
systemd.mask=hibernate.target \
"

# # Don't use iBFT. Specify iSCSI connection details directly using the kernel
# # cmdline. Some BIOSs don't properly support an ACPI iBFT table, so you can
# # resort to this in those situations. Note this will leak the target password
# # to all users through /proc/cmdline.
# 
# uci set pxe_menu.@pxe_menu[0].ibft="0"
# 
# # Specify the dracut-network iSCSI parameters
# uci set pxe_menu.@pxe_menu[0].cmdline_iscsi="\
# rd.shell \
# rd.retry=5 \
# netroot=iscsi:\${target-server-ip}::::$(uci get tgt.1.name) \
# rd.iscsi.initiator=$(uci get tgt.1.allow_name) \
# rd.iscsi.username=$(uci get tgt.user_in.user) \
# rd.iscsi.password=$(uci get tgt.user_in.password) \
# rd.iscsi.in.username=$(uci get tgt.user_out.user) \
# rd.iscsi.in.password=$(uci get tgt.user_out.password) \
# rd.iscsi.param=node.session.timeo.replacement_timeout=-1 \
# ifname=bootnet:\${netX/mac} \
# ip=bootnet:dhcp \
# systemd.mask=sleep.target \
# systemd.mask=suspend.target \
# systemd.mask=hibernate.target \
# "

# Remove these from any found cmdlines (TODO)
uci set pxe_menu.@pxe_menu[0].cmdline_remove="quiet"

# PXE menu settings
uci set pxe_menu.@pxe_menu[0].menu_title="$(uci get system.@system[0].hostname) - PXE Boot Menu"
uci set pxe_menu.@pxe_menu[0].menu_username='pxe'
uci set pxe_menu.@pxe_menu[0].menu_password='pass1234'

# Static menu sections
uci add pxe_menu static
uci set pxe_menu.@static[-1].label='sanboot'
uci set pxe_menu.@static[-1].title='iBFT SAN boot'
uci set pxe_menu.@static[-1].section='os'
uci set pxe_menu.@static[-1].use_ibft='1'
uci add_list pxe_menu.@static[-1].commands='sanboot || goto failed'

uci add pxe_menu static
uci set pxe_menu.@static[-1].label='reload'
uci set pxe_menu.@static[-1].title='Reload boot menu'
uci set pxe_menu.@static[-1].section='options'
uci add_list pxe_menu.@static[-1].commands='chain --replace ${boot-url}cgi-bin/reload-menu-ipxe || goto failed'

uci add pxe_menu static
uci set pxe_menu.@static[-1].label='config'
uci set pxe_menu.@static[-1].title='Configure settings'
uci set pxe_menu.@static[-1].section='options'
uci add_list pxe_menu.@static[-1].commands='config'

uci add pxe_menu static
uci set pxe_menu.@static[-1].label='shell'
uci set pxe_menu.@static[-1].title='Drop to iPXE shell'
uci set pxe_menu.@static[-1].section='options'
uci add_list pxe_menu.@static[-1].commands='echo Type "exit" to get the back to the menu'
uci add_list pxe_menu.@static[-1].commands='shell'

uci add pxe_menu static
uci set pxe_menu.@static[-1].label='reboot'
uci set pxe_menu.@static[-1].title='Reboot computer'
uci set pxe_menu.@static[-1].section='options'
uci add_list pxe_menu.@static[-1].commands='reboot'

uci add pxe_menu static
uci set pxe_menu.@static[-1].label='exit'
uci set pxe_menu.@static[-1].title='Exit iPXE and continue BIOS boot'
uci set pxe_menu.@static[-1].section='options'
uci add_list pxe_menu.@static[-1].commands='exit'

# Commit settings
uci commit pxe_menu
